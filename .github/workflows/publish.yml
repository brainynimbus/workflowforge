# Do not modify - Generated with WorkflowForge
name: "Publish WorkflowForge to PyPI"
"on":
  push:
    branches:
    - "main"
  pull_request:
    branches:
    - "main"
  release:
    types:
    - "published"
jobs:
  test:
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version:
        - "3.11"
        - "3.12"
        - "3.13"
    steps:
    - uses: "actions/checkout@v4"
      name: "Checkout code"
    - uses: "actions/setup-python@v5"
      name: "Set up Python ${{ matrix.python-version }}"
      with:
        python-version: "${{ matrix.python-version }}"
    - run: "python -m pip install --upgrade pip"
      name: "Install pip"
    - run: "pip install -e .[dev]"
      name: "Install dependencies"
    - run: "black --check src/ tests/"
      name: "Check code formatting"
    - run: "isort --check-only src/ tests/"
      name: "Check import sorting"
    # - run: "mypy src/"
    #   name: "Type checking"
    - run: "pytest tests/ --cov=workflowforge --cov-report=xml"
      name: "Run tests with coverage"
  security:
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v4"
      name: "Checkout code"
    - uses: "actions/setup-python@v5"
      name: "Set up Python"
      with:
        python-version: "3.11"
    - run: "pip install bandit safety"
      name: "Install security tools"
    - run: "bandit -r src/"
      name: "Security scan with Bandit"
    - run: "safety check --json || safety check --short-report"
      name: "Check dependencies for vulnerabilities"
  build:
    runs-on: "ubuntu-latest"
    needs:
    - "test"
    - "security"
    steps:
    - uses: "actions/checkout@v4"
      name: "Checkout code"
    - uses: "actions/setup-python@v5"
      name: "Set up Python"
      with:
        python-version: "3.11"
    - run: "python -m pip install --upgrade pip build twine"
      name: "Install build tools"
    - run: "python -m build"
      name: "Build package"
    - run: "twine check dist/*"
      name: "Verify package metadata"
    - uses: "actions/upload-artifact@v4"
      name: "Upload build artifacts"
      with:
        name: "dist"
        path: "dist/"
  test-publish:
    runs-on: "ubuntu-latest"
    needs: "build"
    "if": "github.ref == 'refs/heads/main'"
    environment:
      name: "testpypi"
      url: "https://test.pypi.org/p/workflowforge"
    permissions:
      id-token: "write"
    steps:
    - uses: "actions/download-artifact@v4"
      name: "Download build artifacts"
      with:
        name: "dist"
        path: "dist/"
    - uses: "pypa/gh-action-pypi-publish@release/v1"
      name: "Publish to TestPyPI"
      with:
        repository-url: "https://test.pypi.org/legacy/"
        print-hash: "true"
  publish:
    runs-on: "ubuntu-latest"
    needs: "build"
    "if": "github.event_name == 'release'"
    environment:
      name: "pypi"
      url: "https://pypi.org/p/workflowforge"
    permissions:
      id-token: "write"
    steps:
    - uses: "actions/download-artifact@v4"
      name: "Download build artifacts"
      with:
        name: "dist"
        path: "dist/"
    - uses: "pypa/gh-action-pypi-publish@release/v1"
      name: "Publish to PyPI"
      with:
        print-hash: "true"
